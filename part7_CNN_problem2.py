# -*- coding: utf-8 -*-
"""PROBLEM2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MHD4fRwp-ipGa7eUZWhLysiZ2mpBZXnp
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
from scipy import signal
import matplotlib.pyplot as plt
from PIL import Image
# %matplotlib inline

from google.colab import files
uploaded = files.upload()

IMAGE = Image.open("02Rice.png")

print("The FIGURE before FILTERING:")
fig,aux = plt.subplots(figsize=(8,8))
aux.imshow(IMAGE, cmap="gray")

IMAGE_GR = IMAGE.convert("L")
ARR = np.asarray(IMAGE_GR)

# create LAPLACIAN FILTERS 1,2,3,4
FILTER1 = np.array([ [0,1,0], [1,-4,1], [0,1,0] ])
print(FILTER1)

FILTER2 =  np.array([ [1,1,1], [1,-8,1], [1,1,1] ])
print(FILTER2)

FILTER3 =  np.array([ [0,1,0], [1,-5,1], [0,1,0] ])
print(FILTER3)

FILTER4 =  np.array([ [1,1,1], [1,-9,1], [1,1,1] ])
print(FILTER4)

GRAD1 = signal.convolve2d(ARR, FILTER1, mode="same" , boundary = "symm")

GRAD2 = signal.convolve2d(IMAGE_GR, FILTER2, mode="same" , boundary = "symm")

GRAD3 = signal.convolve2d(IMAGE_GR, FILTER3, mode="same" , boundary = "symm")

GRAD4 = signal.convolve2d(IMAGE_GR, FILTER4, mode="same" , boundary = "symm")



print("The Figure after FILTERING: FILTER 1")
fig,aux = plt.subplots(figsize=(8,8))
aux.imshow(np.absolute(GRAD1), cmap="gray")

print("The Figure after FILTERING : FILTER 2")
fig,aux = plt.subplots(figsize=(8,8))
aux.imshow(np.absolute(GRAD2), cmap="gray")

print("The Figure after FILTERING : FILTER 3")
fig,aux = plt.subplots(figsize=(8,8))
aux.imshow(np.absolute(GRAD3), cmap="gray")

print("The Figure after FILTERING : FILTER 4")
fig,aux = plt.subplots(figsize=(8,8))
aux.imshow(np.absolute(GRAD4), cmap="gray")



