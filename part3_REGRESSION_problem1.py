# -*- coding: utf-8 -*-
"""HW3_PROBLEM1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ozFDGF3dapOcDzJbY_XrT1yarxV0FQk6
"""

import numpy as np 
import matplotlib.pyplot as plt
from sklearn import linear_model 
 
n_samples = 30 
train_x = np.linspace(0,20,n_samples) 
train_y = 3.7 * train_x + 14 + 4 * np.random.randn(n_samples) 
 
plt.plot(train_x, train_y,'o') 

print(type(train_x))
print(type(train_y))

x = train_x.reshape(-1, 1) 
y = train_y.reshape(-1, 1)

linreg = linear_model.LinearRegression()
linreg.fit(x, y) 
print(linreg.intercept_)
print(linreg.coef_)



import keras 
from keras.models import Sequential 
from keras.layers import Dense

xScale = x/100
#print(xScale)

yScale = y/100
#print(yScale)

model = Sequential()
model.add(Dense(1, input_dim=1, kernel_initializer = "normal", activation = "linear"))

# compile the MODEL
model.compile(loss = "mean_squared_error", optimizer = "adam", metrics = ["mse"])

model.summary()

# epochs = 10000
epochs = 1000
hist = model.fit(xScale, yScale, epochs = epochs, verbose=0)

# get Regression Weights
weightBias = model.layers[0].get_weights()
print("Weight + Bias = ", weightBias)



