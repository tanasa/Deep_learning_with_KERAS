# -*- coding: utf-8 -*-
"""PROBLEM1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZYodmbhbBl71A9al1sSnmZkhAQABy8PX
"""

import numpy as np
from scipy import signal as sg
import tensorflow as tf
import keras as ks



# the SOLUTION with SCIPY

I = np.array([ [97,52,99,62,69,45,70], [99,14,60,50,74,45,22], [59,72,74,14,74,100,28], [28,2,47,85,2,88,77], [74,6,30,87,49,22,43], [86,87,4,53,36,10,46] , [54,7,67,23,29,26,5]], dtype=object)
print(I.shape)

g = np.array([ [1,2,1], [2,4,2], [1,2,1] ],dtype=object)
print(g.shape)

sg.convolve(I,g)

sg.convolve(I,g, mode="full")

sg.convolve(I,g, mode="valid")



Itf = tf.convert_to_tensor(I.astype(float))
Itf.shape
ITF = tf.reshape(Itf, [1,7,7,1])
# print(ITF)

gtf = tf.convert_to_tensor(g.astype(float))
gtf.shape
GTF = tf.reshape(gtf, [3,3,1,1])
# print(GTF)

op1 = tf.nn.conv2d(ITF, GTF, strides = [1,1,1,1], padding = "VALID")
op2 = tf.nn.conv2d(ITF, GTF, strides = [1,1,1,1], padding = "SAME")

print(op1.numpy()[:1,:1])

print(op2.numpy()[:1,:1])

